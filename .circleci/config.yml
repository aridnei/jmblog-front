# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
general:
  
jobs:
  build:
    branches:
      only:
      - master
    docker:
      # specify the version you desire here
      - image: circleci/node:8
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:   # (2)
          docker_layer_caching: false # (3)

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm install

      - attach_workspace:
          at: .

      - run: CI=false npm run build

      - persist_to_workspace:
          root: .
          paths:
            - build

      # Deploy to S3 Bucket
      # - run: sudo apt-get update && sudo apt-get install -y python-dev
      # - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
      # - run: sudo python get-pip.py
      # - run: sudo pip install awscli --upgrade
      # - run: aws --version
      # - run: aws s3 sync build/ s3://app-jmblog-front-test --delete --acl public-read
      - run:
          name: Build application Docker image
          command: |
            pwd
            ls -la
            docker image build -t jmblog-front .
            docker images
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              apt-get update
              apt-get install -y jq
              AWS_REPO=$(cat deploy-definitions.json | jq --raw-output '.aws_repo')
              GITHUB_VERSION=$(cat deploy-definitions.json | jq --raw-output '.github_version')
              AWS_DEFAULT_REGION=$(cat deploy-definitions.json | jq --raw-output '.aws_region')
              echo "$AWS_REPO:$GITHUB_VERSION-ci$CIRCLE_BUILD_NUM"
              login="$(aws ecr get-login --region=$AWS_DEFAULT_REGION --no-include-email)"
              ${login}
              docker tag jmblog-front "$AWS_REPO:$GITHUB_VERSION-ci$CIRCLE_BUILD_NUM"
              # docker tag jmblog-front "${ECR_ENDPOINT}:${CIRCLE_SHA1}"
              docker images
              docker push "$AWS_REPO:$GITHUB_VERSION-ci$CIRCLE_BUILD_NUM"
              # docker push "${ECR_ENDPOINT}:${CIRCLE_SHA1}"
            fi